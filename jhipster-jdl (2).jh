entity Employee(employees) {

 employeeNumber String required,
 firstName String ,
 middleName String,
 lastName String ,
 gender String ,
 birthDate LocalDate ,
 email String unique,
 cellPhone String,
 maritalStatus String,
 active Boolean,
 contractStartDate LocalDate,
 contractEndDate LocalDate,
 bankName String ,
 branchName String ,
 bankAccount String ,
 insuranceRegistrationNumber String, 
 districtId Long required,
 facilityId Long,
 categoryId Long required,
 trainingId Long,
 carderId Long,
 picture ImageBlob,
 departmentName String,
 attachment String,
 confirmationId Long ,
 isConfirmed Boolean,
 confirmationLetterName String,
 projectName String

}

entity FacilityType(facility_types) {

 code String unique,
 name String required,
 description String,
 displayOrder Integer,
 active Boolean 
 
}



entity GeographicLevel (geographic_levels) {

 code String unique,
 name String required,
 levelNumber Integer unique,
 active Boolean

}


entity GeographicZone (geographic_zones) {

 code String unique,
 name String required,
 latitude Float,
 longitude Float,
 levelid Integer unique,
 parentid Long

}

relationship ManyToOne {
	GeographicZone{parent} to GeographicZone
}

relationship ManyToOne {
	GeographicZone{levelId} to GeographicLevel
}


entity Facility (facilities) {

    active Boolean required,
    code String unique,
    name String required,
    postalAddress String,
    ward String,
    village String,
    comment String,
    description String,
    enabled Boolean required,
    startDate Date,
    geographiczoneid Long required,
    operatedby String,
    typeid Long required

}

entity EmploymentCategory(employment_categories) {

code String,

name String

}

entity Project(projects) {

code String,

name String,

startDate LocalDate,

endDate LocalDate

}


entity Department(departments) {

code String unique,

name String

}

entity Carder(carders) {

code String,
name String

}

entity Attachment(attachments) {
  name String 
  contentId String
  contentLength Long
  mimeType String
}

relationship OneToMany {
 	Department to
	Employee{departmentId}
}


paginate Employee with pagination
dto all with mapstruct
filter Employee






